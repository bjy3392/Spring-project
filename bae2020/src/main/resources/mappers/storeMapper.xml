<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.bae2020.dao.StoreDao">
	
	<select id="findStoreByMid" resultType="com.spring.bae2020.vo.StoreVo">
		select * from store where manager=#{mid};
	</select>
	
	<update id="updateOrderByState">
		update orders set state=#{state} , update_dt=now() where order_idx=#{order_idx};
	</update>
	
	<update id="updateOrderByDelivery">
		update orders set delivery=#{mid} where order_idx=#{order_idx};
	</update>
	
	<update id="updateStoreByOpen">
		update store set open_yn=#{open_yn} where store_code=#{store_code};
	</update>
	
	<select id="findOrderByDeliveryState" resultType="com.spring.bae2020.vo.OrdersVo">
		select orders.*, state.state_name, user.name
		  from orders
		 inner join state 
		    on orders.state = state.state_code
		  left outer join user
		    on orders.delivery = user.mid
		 where 1=1
		   and store=#{store_code}
		   and state in ('state-03', 'state-04','state-05')
		   and date(orders.create_dt) = date(now())
		 order by state, update_dt;
	</select>
	
	<select id="findItemGroupByProduct" resultType="com.spring.bae2020.vo.ItemVo">
		select ctg.category_name, sum(item.price+item.price_add+item.price_meat) as sum_price
		  from item 
		 inner join orders
		    on item.order_idx = orders.order_idx
		   and date(orders.update_dt) = #{ymd} 
		 inner join store 
		    on orders.store = store.store_code
		   and store.manager = #{mid}
		 inner join product prod
		    on item.product = prod.product_code
		 inner join category ctg
		    on prod.category_code = ctg.category_code
		 group by prod.category_code 
	</select>
	
	<select id="findStockBtStore" resultType="com.spring.bae2020.vo.StockVo">
		select * from stock where store=#{store_code} and use_yn = 'y';
	</select>
	
	<update id="updateStock">
		update stock set quantity=quantity+#{quantity} where option_code=#{option_code} and store=#{store};
	</update>
	
	<update id="updateOrderByCancel">
		update orders set cancel=#{cancel} where order_idx=#{order_idx};
	</update>
	
	<!-- <select id="findOrderOptionGroupByCode" resultMap="Map">
		select opt.option_code,sum(item.cnt), orders.store  
		  from item
		 inner join options opt
			 on substring_index(item.option_unit,'/',1) = opt.option_name
			and opt.subcategory_code = 'opt-001'
		 inner join orders
		     on item.order_idx = orders.order_idx
		  where orders.order_idx = #{order_idx}
		  group by opt.option_code
	</select> -->
	
	<select id="findOrderOptionGroupByCode" resultMap="selectMapList">
		select opt.option_code,sum(item.cnt) as cnt, orders.store  
		  from item
		 inner join options opt
			 on substring_index(item.option_unit,'/',1) = opt.option_name
			and opt.subcategory_code = 'opt-001'
		 inner join orders
		     on item.order_idx = orders.order_idx
		  where orders.order_idx = #{order_idx}
		  group by opt.option_code
	</select> 
	<resultMap type="map" id="selectMapList"> 
		<result column="option_code" property="option_code"/> 
		<result column="cnt" property="cnt"/> 
		<result column="store" property="store"/> 
	</resultMap>

	<update id="updateStockByOption">
		update stock set quantity=quantity-#{cnt} where option_code=#{option_code} and store=#{store};
	</update>
	
	<select id="findOrderGroupByHour" resultType="com.spring.bae2020.vo.TimeTableVo">
		SELECT TIME_TABLE.TITLE
 	         , IFNULL(ORDERS.CNT,0) AS CNT
		 FROM (SELECT '09-10' AS TITLE UNION 
		 	   SELECT '10-11' AS TITLE UNION
		 	   SELECT '11-12' AS TITLE UNION
		 	   SELECT '12-13' AS TITLE UNION
		 	   SELECT '13-14' AS TITLE UNION
		 	   SELECT '14-15' AS TITLE UNION
		 	   SELECT '15-16' AS TITLE UNION
		 	   SELECT '16-17' AS TITLE UNION
		 	   SELECT '17-18' AS TITLE UNION
		 	   SELECT '18-19' AS TITLE UNION
		 	   SELECT '19-20' AS TITLE UNION
		 	   SELECT '20-21' AS TITLE UNION
		 	   SELECT '21-22' AS TITLE UNION 
		 	   SELECT '22-23' AS TITLE ) TIME_TABLE
		 LEFT OUTER JOIN (SELECT TITLE, COUNT(*) AS CNT
		 				    FROM (SELECT (CASE WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '09' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'10'
									    THEN '09-10'
									    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '10' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'11'
									    THEN '10-11'
									    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '11' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'12'
									    THEN '11-12'
									    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '12' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'13'
									    THEN '12-13'
									    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '13' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'14'
									    THEN '13-14'
									    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '14' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'15'
									    THEN '14-15'
									    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '15' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'16'
									    THEN '15-16'
									    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '16' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'17'
									    THEN '16-17'
									    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '17' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'18'
									    THEN '17-18'
									    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '18' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'19'
									    THEN '18-19'
									    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '19' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'20'
									    THEN '19-20'
									    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '20' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'21'
									    THEN '20-21'
									    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '21' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'22'
									    THEN '21-22'
									    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '22' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'23'
									    THEN '22-23'
									    ELSE '' END ) AS TITLE
									 FROM ORDERS
									WHERE 1=1 
									  AND STORE=#{store}
									  AND STATE != 'state-06'
									  AND DATE_SUB(NOW(), INTERVAL 1 MONTH) <![CDATA[<]]> CREATE_DT) ORDERS
						  GROUP BY ORDERS.TITLE) ORDERS
		   ON TIME_TABLE.TITLE = ORDERS.TITLE
		ORDER BY TIME_TABLE.TITLE;
	</select>
	
	<!-- <resultMap type="map" id="hourMapList"> 
		<result column="title" property="title"/> 
		<result column="cnt" property="cnt"/> 
	</resultMap> -->
	
	<select id="findOrderGroupByCategory" resultType="com.spring.bae2020.vo.TimeTableVo">
		SELECT TIME_TABLE.TITLE
			 , IFNULL(ORDERS.SUM1,0) AS SUM1
			 , IFNULL(ORDERS.SUM2,0) AS SUM2
			 , IFNULL(ORDERS.SUM3,0) AS SUM3
			 , IFNULL(ORDERS.SUM4,0) AS SUM4
			FROM (SELECT '09-10' AS TITLE UNION 
				   SELECT '10-11' AS TITLE UNION
				   SELECT '11-12' AS TITLE UNION
				   SELECT '12-13' AS TITLE UNION
				   SELECT '13-14' AS TITLE UNION
				   SELECT '14-15' AS TITLE UNION
				   SELECT '15-16' AS TITLE UNION
				   SELECT '16-17' AS TITLE UNION
				   SELECT '17-18' AS TITLE UNION
				   SELECT '18-19' AS TITLE UNION
				   SELECT '19-20' AS TITLE UNION
				   SELECT '20-21' AS TITLE UNION
				   SELECT '21-22' AS TITLE UNION
				   SELECT '22-23' AS TITLE ) TIME_TABLE 	   
			LEFT OUTER JOIN (SELECT TITLE, SUM(CNT1) AS SUM1, SUM(CNT2) AS SUM2, SUM(CNT3) AS SUM3, SUM(CNT4) AS SUM4
							    FROM (SELECT (CASE WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '09' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'10'
											    THEN '09-10'
											    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '10' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'11'
											    THEN '10-11'
											    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '11' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'12'
											    THEN '11-12'
											    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '12' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'13'
											    THEN '12-13'
											    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '13' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'14'
											    THEN '13-14'
											    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '14' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'15'
											    THEN '14-15'
											    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '15' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'16'
											    THEN '15-16'
											    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '16' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'17'
											    THEN '16-17'
											    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '17' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'18'
											    THEN '17-18'
											    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '18' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'19'
											    THEN '18-19'
											    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '19' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'20'
											    THEN '19-20'
											    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '20' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'21'
											    THEN '20-21'
											    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '21' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'22'
											    THEN '21-22'
											    WHEN HOUR(ORDERS.CREATE_DT) <![CDATA[>=]]> '22' AND HOUR(ORDERS.CREATE_DT) <![CDATA[<]]>'23'
											    THEN '22-23'
											    ELSE '' END ) AS TITLE 
											  , IF(CTG.CATEGORY_NAME='샌드위치',1,0) AS CNT1
										 	  , IF(CTG.CATEGORY_NAME='찹샐러드',1,0) AS CNT2
										 	  , IF(CTG.CATEGORY_NAME='쿠키',1,0) AS CNT3
										 	  , IF(CTG.CATEGORY_NAME='랩',1,0) AS CNT4
									 FROM ORDERS
									INNER JOIN ITEM
									   ON ORDERS.ORDER_IDX = ITEM.ORDER_IDX
									INNER JOIN PRODUCT PROD
									   ON ITEM.PRODUCT = PROD.PRODUCT_CODE
									INNER JOIN CATEGORY CTG
									   ON PROD.CATEGORY_CODE = CTG.CATEGORY_CODE
									WHERE 1=1 
									  AND STORE=#{store}
									  AND STATE != 'state-06'
									  AND DATE_SUB(NOW(), INTERVAL 1 MONTH) <![CDATA[<]]>  ORDERS.CREATE_DT) ORDERS
						  GROUP BY ORDERS.TITLE) ORDERS
			  ON TIME_TABLE.TITLE = ORDERS.TITLE;
	</select>
	<!-- <resultMap type="map" id="ctgMapList"> 
		<result column="title" property="title"/> 
		<result column="sum1" property="sum1"/> 
		<result column="sum2" property="sum2"/> 
		<result column="sum3" property="sum3"/> 
		<result column="sum4" property="sum4"/> 
	</resultMap> -->
	
	<select id="findPieChar"  resultType="com.spring.bae2020.vo.CategoryVo">
		SELECT PROD.CATEGORY_CODE, CTG.CATEGORY_NAME, COUNT(*) AS CNT
		  FROM ORDERS
		  INNER JOIN ITEM
             ON ORDERS.ORDER_IDX = ITEM.ORDER_IDX
          INNER JOIN PRODUCT PROD
             ON ITEM.PRODUCT = PROD.PRODUCT_CODE
          INNER JOIN CATEGORY CTG
             ON PROD.CATEGORY_CODE = CTG.CATEGORY_CODE
          WHERE 1=1 
            AND STORE=#{store}
            AND STATE != 'state-06'
            AND DATE_SUB(NOW(), INTERVAL 1 MONTH) <![CDATA[<]]>  ORDERS.CREATE_DT
          GROUP BY CATEGORY_NAME
          ORDER BY CNT DESC
	</select>
	
	<select id="findOrderGroupByProduct" resultType="com.spring.bae2020.vo.ProductVo">
		SELECT PROD.PRODUCT_NAME, COUNT(*) AS CNT
	      FROM ORDERS
	     INNER JOIN ITEM
	        ON ORDERS.ORDER_IDX = ITEM.ORDER_IDX
	     INNER JOIN PRODUCT PROD
	        ON ITEM.PRODUCT = PROD.PRODUCT_CODE
	     INNER JOIN CATEGORY CTG
	        ON PROD.CATEGORY_CODE = CTG.CATEGORY_CODE
	       AND CTG.CATEGORY_NAME = #{category}
	     WHERE 1=1 
	       AND STORE=#{store}
	       AND STATE != 'state-06'
	       AND DATE_SUB(NOW(), INTERVAL 1 MONTH) <![CDATA[<]]> ORDERS.CREATE_DT
	     GROUP BY PROD.PRODUCT_NAME
	     ORDER BY CNT DESC
	</select>
	
	<select id="findUserByStore" resultType="com.spring.bae2020.vo.ReorderVo">
		SELECT IF(CNT != 1 ,'REORDER','FIRST') AS 'USER_GROUP' , COUNT(*) AS CNT
    	  FROM (SELECT MID, COUNT(*) AS CNT
    	    	  FROM ORDERS 
    	   	  	 WHERE 1=1
    	   	  	   AND STORE = #{store}
    	   	  	   AND STATE != 'state-06'
    	   	  	   AND DATE_SUB(NOW(), INTERVAL 1 MONTH) <![CDATA[<]]> ORDERS.CREATE_DT
    	   	  	 GROUP BY MID ) ORDERS 
  	   	  GROUP BY USER_GROUP 
	      ORDER BY USER_GROUP DESC;  
	</select>
	
	<select id="findUserByOrderCnt" resultType="com.spring.bae2020.vo.UserVo">
		SELECT CONCAT(NAME,'(', FORMAT(SUM(TOTAL) , 0),'원',')') AS MID
		     , COUNT(*) AS CNT
		  FROM ORDERS 
		 INNER JOIN USER
		    ON ORDERS.MID = USER.MID  
		   AND USER.MID != 'admin'
		 WHERE 1=1
		   AND STORE = #{store}
		   AND STATE != 'state-06'
		   AND DATE_SUB(NOW(), INTERVAL 1 MONTH) <![CDATA[<]]> ORDERS.CREATE_DT
		 GROUP BY ORDERS.MID 
		 ORDER BY CNT DESC;
	</select>
	
</mapper>






